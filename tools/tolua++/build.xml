<project name="Cocos2d-xToLua" default="create-lua-bindings" basedir=".">
    <description>
        Utilises tolua++ to create the lua bindings to expose cocos2d-x functionality to lua
    </description>
    <property name="tolua++" location="tolua++.exe"/>

  <target name="cocos2d-x-bindings">
    <echo message="Calling tolua++" />
    <exec executable="${tolua++}">
      <arg value="-L"/>
      <arg value="virtual_method_hooks.lua" />
      <arg value="-o"/>
      <arg value="LuaCocos2d.cpp"/>
      <arg value="Cocos2d.pkg"/>
    </exec>
    <echo message="Patching resultant lua bindings" />
    <replace file="LuaCocos2d.cpp">
      <replacetoken><![CDATA[CCMutableArray<cocos2d::]]></replacetoken>
      <replacevalue><![CDATA[cocos2d::CCMutableArray<]]></replacevalue>
    </replace>
    <!-- I think this next patch is un-neccessary -->
    <replace file="LuaCocos2d.cpp">
      <replacetoken><![CDATA[unsigned void* tolua_ret = (unsigned void*)  self->getTiles();]]></replacetoken>
      <replacevalue><![CDATA[unsigned int* tolua_ret = (unsigned int*)  self->getTiles();]]></replacevalue>
    </replace>
    <replace file="LuaCocos2d.cpp">
      <replacetoken><![CDATA[cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,4,(void*)&(const cocos2d::ccColor3B)ccBLACK));]]></replacetoken>
      <replacevalue><![CDATA[const cocos2d::ccColor3B clr = ccBLACK;
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,4,(void*)&clr));]]></replacevalue>
    </replace>
    <replace file="LuaCocos2d.cpp">
      <replacetoken><![CDATA[tolua_constant(tolua_S,"CCSpriteIndexNotInitialized",cocos2d::CCSpriteIndexNotInitialized);]]></replacetoken>
      <replacevalue><![CDATA[tolua_constant(tolua_S,"CCSpriteIndexNotInitialized",CCSpriteIndexNotInitialized);]]></replacevalue>
    </replace> 
    <replace file="LuaCocos2d.cpp">
      <replacetoken><![CDATA[/* Exported function */
TOLUA_API int  tolua_Cocos2d_open (lua_State* tolua_S);

#include "tolua_base.h"
#include "LuaCocos2d.h"

/* function to release collected object via destructor */]]></replacetoken>
      <replacevalue><![CDATA[using namespace cocos2d;

/* Exported function */
TOLUA_API int  tolua_Cocos2d_open (lua_State* tolua_S);

/* function to release collected object via destructor */]]></replacevalue>
    </replace> 
    <replace file="LuaCocos2d.cpp">
      <replacetoken><![CDATA[*/

#ifndef __cplusplus
#include "stdlib.h"
#endif]]></replacetoken>
      <replacevalue><![CDATA[*/

#include "tolua_base.h"
#include "LuaCocos2d.h"

#ifndef __cplusplus
#include "stdlib.h"
#endif]]></replacevalue>
    </replace>

    <!-- Patches required to support the virtual method overriding --> 
    <replaceregexp file="LuaCocos2d.cpp" match="cocos2d::(\w+__\w+)" replace="\1" flags="g"/>
    <replace file="LuaCocos2d.cpp">

    <replacetoken><![CDATA[cocos2d::ccColor3B  getColor( void ) {
		if (push_method("getColor",  tolua_Cocos2d_cocos2d_CCMenuItemLabel_getColor00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 cocos2d::ccColor3B  tolua_ret = ( cocos2d::ccColor3B )*(cocos2d::ccColor3B*)tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( cocos2d::ccColor3B ) cocos2d::CCMenuItemLabel:: getColor();
		};
	};]]></replacetoken>
    <replacevalue><![CDATA[const cocos2d::ccColor3B&  getColor( void ) {
		if (push_method("getColor",  tolua_Cocos2d_cocos2d_CCMenuItemLabel_getColor00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 cocos2d::ccColor3B  tolua_ret = ( cocos2d::ccColor3B )*(cocos2d::ccColor3B*)tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( cocos2d::ccColor3B ) cocos2d::CCMenuItemLabel:: getColor();
		};
	};]]></replacevalue>
    </replace>    
    <echo message="Copying new bindings to target location" />
    <move file="LuaCocos2d.cpp" todir="../../lua/cocos2dx_support/"/>
  </target>
  <target name="create-lua-bindings" depends="cocos2d-x-bindings" />
</project>
